================================================================================
Juliet Test Suite control flow / dataflow variants
--------------------------------------------------------------------------------
01   Baseline
02   Control flow: if(1) and if(0)
03   Control flow: if(5==5) and if(5!=5)
04   Control flow: if(staticTrue) and if(staticFalse)
05   Control flow: if(staticTrue) and if(staticFalse)
06   Control flow: if(STATIC_CONST_FIVE==5) and if(STATIC_CONST_FIVE!=5)
07   Control flow: if(staticFive==5) and if(staticFive!=5)
08   Control flow: if(staticReturnsTrue()) and if(staticReturnsFalse())
09   Control flow: if(GLOBAL_CONST_TRUE) and if(GLOBAL_CONST_FALSE)
10   Control flow: if(globalTrue) and if(globalFalse)
11   Control flow: if(globalReturnsTrue()) and if(globalReturnsFalse())
12   Control flow: if(globalReturnsTrueOrFalse())
13   Control flow: if(GLOBAL_CONST_FIVE==5) and if(GLOBAL_CONST_FIVE!=5)
14   Control flow: if(globalFive==5) and if(globalFive!=5)
15   Control flow: switch(6) and switch(7)
16   Control flow: while(1)
17   Control flow: for loops
18   Control flow: goto statements
21   Control flow: Flow controlled by value of a static global variable (1 file)
22   Control flow: Flow controlled by value of a global variable (2 files)
31   Data flow using a copy of data within the same function
32   Data flow using two pointers to the same value within the same function
34   Data flow: use of a union containing two methods of accessing the same data (within the same function)
41   Data flow: data passed as an argument from one function to another in the same source file
42   Data flow: data returned from one function to another in the same source file
44   Data/control flow: data passed as an argument from one function to a function in the same source file called via a function pointer
45   Data flow: data passed as a static global variable from one function to another in the same source file
51   Data flow: data passed as an argument from one function to another in different source files
52   Data flow: data passed as an argument from one function to another to another in three different source files
53   Data flow: data passed as an argument from one function through two others to a fourth; all four functions are in different source files
54   Data flow: data passed as an argument from one function through three others to a fifth; all five functions are in different source files
61   Data flow: data returned from one function to another in different source files
63   Data flow: pointer to data passed from one function to another in different source files
64   Data flow: void pointer to data passed from one function to another in different source files
65   Data/control flow: data passed as an argument from one function to a function in a different source file called via a function pointer
66   Data flow: data passed in an array from one function to another in different source files
67   Data flow: data passed in a struct from one function to another in different source files
68   Data flow: data passed as a global variable from one function to another in different source files
--------------------------------------------------------------------------------
